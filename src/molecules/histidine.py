

from collections import namedtuple

import numpy as np

Atom = namedtuple('Atom','index type x y z vec fnn snn tnn charge')
Bond = namedtuple('Bond','index label i j length')
Angle = namedtuple('Angle','index label i j k angle')
Torsion = namedtuple('Torsion','index label i j k l angle')

Sysdata = namedtuple('Sysdata','Atoms,Bonds,Angles,Torsions')


Atoms = []
Bonds = []
Angles = []
Torsions = []


Atoms.append(Atom(0,'n3',0.858000,-0.218000,0.073000,np.array([0.858000,-0.218000,0.073000]),[1,12,13],[0,9,2,3],[1,4,10,11,12,13,14,15],-0.917800))
Atoms.append(Atom(1,'c3',2.332000,-0.125000,0.061000,np.array([2.332000,-0.125000,0.061000]),[0,9,3,2],[1,4,10,11,12,13,14,15],[0,2,3,5,8,9,19],0.078500))
Atoms.append(Atom(2,'h1',2.672000,-0.411000,-0.942000,np.array([2.672000,-0.411000,-0.942000]),[1],[0,9,2,3],[1,4,10,11,12,13,14,15],0.112700))
Atoms.append(Atom(3,'c3',2.830000,1.289000,0.417000,np.array([2.830000,1.289000,0.417000]),[1,4,14,15],[0,2,3,5,8,9],[1,4,6,7,10,11,12,13,14,15,16,18],0.000900))
Atoms.append(Atom(4,'cc',2.432000,2.366000,-0.542000,np.array([2.432000,2.366000,-0.542000]),[3,5,8],[1,4,6,7,14,15,16,18],[0,2,3,5,6,7,8,9,17],-0.230900))
Atoms.append(Atom(5,'cd',1.739000,2.374000,-1.735000,np.array([1.739000,2.374000,-1.735000]),[4,6,16],[8,3,5,7],[1,4,6,7,8,14,15,16,17,18],0.305200))
Atoms.append(Atom(6,'nd',1.643000,3.644000,-2.242000,np.array([1.643000,3.644000,-2.242000]),[5,7],[16,8,4,6,17],[3,4,5,7,8,18],-0.667000))
Atoms.append(Atom(7,'cc',2.267000,4.410000,-1.379000,np.array([2.267000,4.410000,-1.379000]),[6,8,17],[18,4,5,7],[3,4,5,6,8,16,17],0.387400))
Atoms.append(Atom(8,'na',2.763000,3.684000,-0.335000,np.array([2.763000,3.684000,-0.335000]),[4,7,18],[8,17,3,5,6],[1,4,5,6,7,14,15,16,18],-0.297900))
Atoms.append(Atom(9,'c',2.974000,-1.116000,1.047000,np.array([2.974000,-1.116000,1.047000]),[1,11,10],[0,9,2,3,19],[1,4,10,11,12,13,14,15],0.574100))
Atoms.append(Atom(10,'oh',2.076000,-1.870000,1.726000,np.array([2.076000,-1.870000,1.726000]),[9,19],[1,10,11],[0,9,2,3,19],-0.579100))
Atoms.append(Atom(11,'o',4.178000,-1.222000,1.231000,np.array([4.178000,-1.222000,1.231000]),[9],[1,10,11],[0,9,2,3,19],-0.471000))
Atoms.append(Atom(12,'hn',0.400000,0.168000,0.893000,np.array([0.400000,0.168000,0.893000]),[0],[1,12,13],[0,9,2,3],0.366300))
Atoms.append(Atom(13,'hn',0.469000,-1.079000,-0.297000,np.array([0.469000,-1.079000,-0.297000]),[0],[1,12,13],[0,9,2,3],0.366300))
Atoms.append(Atom(14,'hc',3.927000,1.284000,0.474000,np.array([3.927000,1.284000,0.474000]),[3],[1,4,14,15],[0,2,3,5,8,9],0.064200))
Atoms.append(Atom(15,'hc',2.476000,1.560000,1.421000,np.array([2.476000,1.560000,1.421000]),[3],[1,4,14,15],[0,2,3,5,8,9],0.064200))
Atoms.append(Atom(16,'h4',1.300000,1.534000,-2.259000,np.array([1.300000,1.534000,-2.259000]),[5],[16,4,6],[8,3,5,7],0.042100))
Atoms.append(Atom(17,'h5',2.392000,5.481000,-1.456000,np.array([2.392000,5.481000,-1.456000]),[7],[8,17,6],[18,4,5,7],0.062100))
Atoms.append(Atom(18,'hn',3.284000,4.058000,0.447000,np.array([3.284000,4.058000,0.447000]),[8],[18,4,7],[8,17,3,5,6],0.316700))
Atoms.append(Atom(19,'ho',1.172000,-1.627000,1.449000,np.array([1.172000,-1.627000,1.449000]),[10],[9,19],[1,10,11],0.424000))
Bonds.append(Bond(0,'n3-c3',0,1,111))
Bonds.append(Bond(1,'n3-hn',0,12,111))
Bonds.append(Bond(2,'n3-hn',0,13,111))
Bonds.append(Bond(3,'c3-c',1,9,111))
Bonds.append(Bond(4,'c3-c3',1,3,111))
Bonds.append(Bond(5,'c3-h1',1,2,111))
Bonds.append(Bond(6,'c3-cc',3,4,111))
Bonds.append(Bond(7,'c3-hc',3,14,111))
Bonds.append(Bond(8,'c3-hc',3,15,111))
Bonds.append(Bond(9,'cc-cd',4,5,111))
Bonds.append(Bond(10,'cc-na',4,8,111))
Bonds.append(Bond(11,'cd-nd',5,6,111))
Bonds.append(Bond(12,'cd-h4',5,16,111))
Bonds.append(Bond(13,'nd-cc',6,7,111))
Bonds.append(Bond(14,'cc-na',7,8,111))
Bonds.append(Bond(15,'cc-h5',7,17,111))
Bonds.append(Bond(16,'na-hn',8,18,111))
Bonds.append(Bond(17,'c-o',9,11,111))
Bonds.append(Bond(18,'c-oh',9,10,111))
Bonds.append(Bond(19,'oh-ho',10,19,111))
Angles.append(Angle(0,'c3-n3-hn',1,0,12,222))
Angles.append(Angle(1,'c3-n3-hn',1,0,13,222))
Angles.append(Angle(2,'n3-c3-c',0,1,9,222))
Angles.append(Angle(3,'n3-c3-c3',0,1,3,222))
Angles.append(Angle(4,'n3-c3-h1',0,1,2,222))
Angles.append(Angle(5,'hn-n3-hn',12,0,13,222))
Angles.append(Angle(6,'c-c3-c3',9,1,3,222))
Angles.append(Angle(7,'c-c3-h1',9,1,2,222))
Angles.append(Angle(8,'c3-c-o',1,9,11,222))
Angles.append(Angle(9,'c3-c-oh',1,9,10,222))
Angles.append(Angle(10,'c3-c3-h1',3,1,2,222))
Angles.append(Angle(11,'c3-c3-cc',1,3,4,222))
Angles.append(Angle(12,'c3-c3-hc',1,3,14,222))
Angles.append(Angle(13,'c3-c3-hc',1,3,15,222))
Angles.append(Angle(14,'cc-c3-hc',4,3,14,222))
Angles.append(Angle(15,'cc-c3-hc',4,3,15,222))
Angles.append(Angle(16,'c3-cc-cd',3,4,5,222))
Angles.append(Angle(17,'c3-cc-na',3,4,8,222))
Angles.append(Angle(18,'hc-c3-hc',14,3,15,222))
Angles.append(Angle(19,'cd-cc-na',5,4,8,222))
Angles.append(Angle(20,'cc-cd-nd',4,5,6,222))
Angles.append(Angle(21,'cc-cd-h4',4,5,16,222))
Angles.append(Angle(22,'cc-na-cc',4,8,7,222))
Angles.append(Angle(23,'cc-na-hn',4,8,18,222))
Angles.append(Angle(24,'nd-cd-h4',6,5,16,222))
Angles.append(Angle(25,'cd-nd-cc',5,6,7,222))
Angles.append(Angle(26,'nd-cc-na',6,7,8,222))
Angles.append(Angle(27,'nd-cc-h5',6,7,17,222))
Angles.append(Angle(28,'na-cc-h5',8,7,17,222))
Angles.append(Angle(29,'cc-na-hn',7,8,18,222))
Angles.append(Angle(30,'o-c-oh',11,9,10,222))
Angles.append(Angle(31,'c-oh-ho',9,10,19,222))
Torsions.append(Torsion(0,'c-c3-n3-hn',9,1,0,12,333))
Torsions.append(Torsion(1,'c3-c3-n3-hn',3,1,0,12,333))
Torsions.append(Torsion(2,'h1-c3-n3-hn',2,1,0,12,333))
Torsions.append(Torsion(3,'c-c3-n3-hn',9,1,0,13,333))
Torsions.append(Torsion(4,'c3-c3-n3-hn',3,1,0,13,333))
Torsions.append(Torsion(5,'h1-c3-n3-hn',2,1,0,13,333))
Torsions.append(Torsion(6,'n3-c3-c-o',0,1,9,11,333))
Torsions.append(Torsion(7,'n3-c3-c-oh',0,1,9,10,333))
Torsions.append(Torsion(8,'n3-c3-c3-cc',0,1,3,4,333))
Torsions.append(Torsion(9,'n3-c3-c3-hc',0,1,3,14,333))
Torsions.append(Torsion(10,'n3-c3-c3-hc',0,1,3,15,333))
Torsions.append(Torsion(11,'o-c-c3-c3',11,9,1,3,333))
Torsions.append(Torsion(12,'oh-c-c3-c3',10,9,1,3,333))
Torsions.append(Torsion(13,'c-c3-c3-cc',9,1,3,4,333))
Torsions.append(Torsion(14,'c-c3-c3-hc',9,1,3,14,333))
Torsions.append(Torsion(15,'c-c3-c3-hc',9,1,3,15,333))
Torsions.append(Torsion(16,'o-c-c3-h1',11,9,1,2,333))
Torsions.append(Torsion(17,'oh-c-c3-h1',10,9,1,2,333))
Torsions.append(Torsion(18,'n3-c3-c-o',0,1,9,11,333))
Torsions.append(Torsion(19,'n3-c3-c-oh',0,1,9,10,333))
Torsions.append(Torsion(20,'c3-c-oh-ho',1,9,10,19,333))
Torsions.append(Torsion(21,'cc-c3-c3-h1',4,3,1,2,333))
Torsions.append(Torsion(22,'hc-c3-c3-h1',14,3,1,2,333))
Torsions.append(Torsion(23,'hc-c3-c3-h1',15,3,1,2,333))
Torsions.append(Torsion(24,'n3-c3-c3-cc',0,1,3,4,333))
Torsions.append(Torsion(25,'c-c3-c3-cc',9,1,3,4,333))
Torsions.append(Torsion(26,'c3-c3-cc-cd',1,3,4,5,333))
Torsions.append(Torsion(27,'c3-c3-cc-na',1,3,4,8,333))
Torsions.append(Torsion(28,'n3-c3-c3-hc',0,1,3,14,333))
Torsions.append(Torsion(29,'c-c3-c3-hc',9,1,3,14,333))
Torsions.append(Torsion(30,'n3-c3-c3-hc',0,1,3,15,333))
Torsions.append(Torsion(31,'c-c3-c3-hc',9,1,3,15,333))
Torsions.append(Torsion(32,'cd-cc-c3-hc',5,4,3,14,333))
Torsions.append(Torsion(33,'na-cc-c3-hc',8,4,3,14,333))
Torsions.append(Torsion(34,'cd-cc-c3-hc',5,4,3,15,333))
Torsions.append(Torsion(35,'na-cc-c3-hc',8,4,3,15,333))
Torsions.append(Torsion(36,'c3-c3-cc-cd',1,3,4,5,333))
Torsions.append(Torsion(37,'c3-cc-cd-nd',3,4,5,6,333))
Torsions.append(Torsion(38,'c3-cc-cd-h4',3,4,5,16,333))
Torsions.append(Torsion(39,'c3-c3-cc-na',1,3,4,8,333))
Torsions.append(Torsion(40,'c3-cc-na-cc',3,4,8,7,333))
Torsions.append(Torsion(41,'c3-cc-na-hn',3,4,8,18,333))
Torsions.append(Torsion(42,'nd-cd-cc-na',6,5,4,8,333))
Torsions.append(Torsion(43,'h4-cd-cc-na',16,5,4,8,333))
Torsions.append(Torsion(44,'cd-cc-na-cc',5,4,8,7,333))
Torsions.append(Torsion(45,'cd-cc-na-hn',5,4,8,18,333))
Torsions.append(Torsion(46,'c3-cc-cd-nd',3,4,5,6,333))
Torsions.append(Torsion(47,'cc-cd-nd-cc',4,5,6,7,333))
Torsions.append(Torsion(48,'c3-cc-cd-h4',3,4,5,16,333))
Torsions.append(Torsion(49,'c3-cc-na-cc',3,4,8,7,333))
Torsions.append(Torsion(50,'cd-cc-na-cc',5,4,8,7,333))
Torsions.append(Torsion(51,'cc-na-cc-nd',4,8,7,6,333))
Torsions.append(Torsion(52,'cc-na-cc-h5',4,8,7,17,333))
Torsions.append(Torsion(53,'c3-cc-na-hn',3,4,8,18,333))
Torsions.append(Torsion(54,'cd-cc-na-hn',5,4,8,18,333))
Torsions.append(Torsion(55,'cc-nd-cd-h4',7,6,5,16,333))
Torsions.append(Torsion(56,'cc-cd-nd-cc',4,5,6,7,333))
Torsions.append(Torsion(57,'cd-nd-cc-na',5,6,7,8,333))
Torsions.append(Torsion(58,'cd-nd-cc-h5',5,6,7,17,333))
Torsions.append(Torsion(59,'cd-nd-cc-na',5,6,7,8,333))
Torsions.append(Torsion(60,'nd-cc-na-hn',6,7,8,18,333))
Torsions.append(Torsion(61,'cd-nd-cc-h5',5,6,7,17,333))
Torsions.append(Torsion(62,'cc-na-cc-h5',4,8,7,17,333))
Torsions.append(Torsion(63,'hn-na-cc-h5',18,8,7,17,333))
Torsions.append(Torsion(64,'nd-cc-na-hn',6,7,8,18,333))
Torsions.append(Torsion(65,'o-c-oh-ho',11,9,10,19,333))
Torsions.append(Torsion(66,'c3-c-oh-ho',1,9,10,19,333))
Torsions.append(Torsion(67,'o-c-oh-ho',11,9,10,19,333))
inputdata = Sysdata(Atoms,Bonds,Angles,Torsions)
