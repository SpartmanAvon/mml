

from collections import namedtuple

import numpy as np

Atom = namedtuple('Atom','index type x y z vec fnn snn tnn charge')
Bond = namedtuple('Bond','index label i j length')
Angle = namedtuple('Angle','index label i j k angle')
Torsion = namedtuple('Torsion','index label i j k l angle')

Sysdata = namedtuple('Sysdata','Atoms,Bonds,Angles,Torsions')


Atoms = []
Bonds = []
Angles = []
Torsions = []


Atoms.append(Atom(0,'n',4.593000,1.136000,-3.728000,np.array([4.593000,1.136000,-3.728000]),[1,10,11],[0,9,2],[1,3,10,11,12,13],-0.667000))
Atoms.append(Atom(1,'c',3.565000,2.017000,-3.845000,np.array([3.565000,2.017000,-3.845000]),[0,9,2],[1,3,10,11,12,13],[0,2,4,5,6,9],0.654100))
Atoms.append(Atom(2,'c3',3.087000,2.651000,-2.558000,np.array([3.087000,2.651000,-2.558000]),[1,12,13,3],[0,2,4,5,6,9],[1,3,7,8,10,11,12,13,14,15],-0.187400))
Atoms.append(Atom(3,'c3',2.181000,1.678000,-1.797000,np.array([2.181000,1.678000,-1.797000]),[5,4,6,2],[1,3,7,8,12,13,14,15],[0,2,4,5,6,9,16],0.083500))
Atoms.append(Atom(4,'h1',1.543000,1.131000,-2.502000,np.array([1.543000,1.131000,-2.502000]),[3],[2,4,5,6],[1,3,7,8,12,13,14,15],0.097700))
Atoms.append(Atom(5,'n3',1.319000,2.414000,-0.841000,np.array([1.319000,2.414000,-0.841000]),[3,14,15],[2,4,5,6],[1,3,7,8,12,13,14,15],-0.919800))
Atoms.append(Atom(6,'c',3.030000,0.639000,-1.031000,np.array([3.030000,0.639000,-1.031000]),[3,8,7],[16,2,4,5,6],[1,3,7,8,12,13,14,15],0.635100))
Atoms.append(Atom(7,'oh',2.282000,-0.239000,-0.318000,np.array([2.282000,-0.239000,-0.318000]),[6,16],[8,3,7],[16,2,4,5,6],-0.566100))
Atoms.append(Atom(8,'o',4.250000,0.545000,-1.084000,np.array([4.250000,0.545000,-1.084000]),[6],[8,3,7],[16,2,4,5,6],-0.517000))
Atoms.append(Atom(9,'o',3.040000,2.245000,-4.930000,np.array([3.040000,2.245000,-4.930000]),[1],[0,9,2],[1,3,10,11,12,13],-0.621100))
Atoms.append(Atom(10,'hn',4.920000,0.653000,-4.554000,np.array([4.920000,0.653000,-4.554000]),[0],[1,10,11],[0,9,2],0.325500))
Atoms.append(Atom(11,'hn',4.959000,0.844000,-2.821000,np.array([4.959000,0.844000,-2.821000]),[0],[1,10,11],[0,9,2],0.325500))
Atoms.append(Atom(12,'hc',2.539000,3.559000,-2.842000,np.array([2.539000,3.559000,-2.842000]),[2],[1,3,12,13],[0,2,4,5,6,9],0.083700))
Atoms.append(Atom(13,'hc',3.950000,2.976000,-1.965000,np.array([3.950000,2.976000,-1.965000]),[2],[1,3,12,13],[0,2,4,5,6,9],0.083700))
Atoms.append(Atom(14,'hn',0.548000,1.849000,-0.497000,np.array([0.548000,1.849000,-0.497000]),[5],[3,14,15],[2,4,5,6],0.371300))
Atoms.append(Atom(15,'hn',0.880000,3.202000,-1.323000,np.array([0.880000,3.202000,-1.323000]),[5],[3,14,15],[2,4,5,6],0.371300))
Atoms.append(Atom(16,'ho',1.332000,-0.031000,-0.359000,np.array([1.332000,-0.031000,-0.359000]),[7],[16,6],[8,3,7],0.449000))
Bonds.append(Bond(0,'n-c',0,1,111))
Bonds.append(Bond(1,'n-hn',0,10,111))
Bonds.append(Bond(2,'n-hn',0,11,111))
Bonds.append(Bond(3,'c-o',1,9,111))
Bonds.append(Bond(4,'c-c3',1,2,111))
Bonds.append(Bond(5,'c3-hc',2,12,111))
Bonds.append(Bond(6,'c3-hc',2,13,111))
Bonds.append(Bond(7,'c3-n3',3,5,111))
Bonds.append(Bond(8,'c3-h1',3,4,111))
Bonds.append(Bond(9,'c3-c',3,6,111))
Bonds.append(Bond(10,'c3-c3',3,2,111))
Bonds.append(Bond(11,'n3-hn',5,14,111))
Bonds.append(Bond(12,'n3-hn',5,15,111))
Bonds.append(Bond(13,'c-o',6,8,111))
Bonds.append(Bond(14,'c-oh',6,7,111))
Bonds.append(Bond(15,'oh-ho',7,16,111))
Angles.append(Angle(0,'c-n-hn',1,0,10,222))
Angles.append(Angle(1,'c-n-hn',1,0,11,222))
Angles.append(Angle(2,'n-c-o',0,1,9,222))
Angles.append(Angle(3,'n-c-c3',0,1,2,222))
Angles.append(Angle(4,'hn-n-hn',10,0,11,222))
Angles.append(Angle(5,'o-c-c3',9,1,2,222))
Angles.append(Angle(6,'c-c3-hc',1,2,12,222))
Angles.append(Angle(7,'c-c3-hc',1,2,13,222))
Angles.append(Angle(8,'c-c3-c3',1,2,3,222))
Angles.append(Angle(9,'hc-c3-hc',12,2,13,222))
Angles.append(Angle(10,'hc-c3-c3',12,2,3,222))
Angles.append(Angle(11,'hc-c3-c3',13,2,3,222))
Angles.append(Angle(12,'n3-c3-h1',5,3,4,222))
Angles.append(Angle(13,'n3-c3-c',5,3,6,222))
Angles.append(Angle(14,'n3-c3-c3',5,3,2,222))
Angles.append(Angle(15,'c3-n3-hn',3,5,14,222))
Angles.append(Angle(16,'c3-n3-hn',3,5,15,222))
Angles.append(Angle(17,'h1-c3-c',4,3,6,222))
Angles.append(Angle(18,'h1-c3-c3',4,3,2,222))
Angles.append(Angle(19,'c-c3-c3',6,3,2,222))
Angles.append(Angle(20,'c3-c-o',3,6,8,222))
Angles.append(Angle(21,'c3-c-oh',3,6,7,222))
Angles.append(Angle(22,'hn-n3-hn',14,5,15,222))
Angles.append(Angle(23,'o-c-oh',8,6,7,222))
Angles.append(Angle(24,'c-oh-ho',6,7,16,222))
Torsions.append(Torsion(0,'o-c-n-hn',9,1,0,10,333))
Torsions.append(Torsion(1,'c3-c-n-hn',2,1,0,10,333))
Torsions.append(Torsion(2,'o-c-n-hn',9,1,0,11,333))
Torsions.append(Torsion(3,'c3-c-n-hn',2,1,0,11,333))
Torsions.append(Torsion(4,'n-c-c3-hc',0,1,2,12,333))
Torsions.append(Torsion(5,'n-c-c3-hc',0,1,2,13,333))
Torsions.append(Torsion(6,'n-c-c3-c3',0,1,2,3,333))
Torsions.append(Torsion(7,'o-c-c3-hc',9,1,2,12,333))
Torsions.append(Torsion(8,'o-c-c3-hc',9,1,2,13,333))
Torsions.append(Torsion(9,'o-c-c3-c3',9,1,2,3,333))
Torsions.append(Torsion(10,'n-c-c3-hc',0,1,2,12,333))
Torsions.append(Torsion(11,'o-c-c3-hc',9,1,2,12,333))
Torsions.append(Torsion(12,'n-c-c3-hc',0,1,2,13,333))
Torsions.append(Torsion(13,'o-c-c3-hc',9,1,2,13,333))
Torsions.append(Torsion(14,'n-c-c3-c3',0,1,2,3,333))
Torsions.append(Torsion(15,'o-c-c3-c3',9,1,2,3,333))
Torsions.append(Torsion(16,'c-c3-c3-n3',1,2,3,5,333))
Torsions.append(Torsion(17,'c-c3-c3-h1',1,2,3,4,333))
Torsions.append(Torsion(18,'c-c3-c3-c',1,2,3,6,333))
Torsions.append(Torsion(19,'hc-c3-c3-n3',12,2,3,5,333))
Torsions.append(Torsion(20,'hc-c3-c3-h1',12,2,3,4,333))
Torsions.append(Torsion(21,'hc-c3-c3-c',12,2,3,6,333))
Torsions.append(Torsion(22,'hc-c3-c3-n3',13,2,3,5,333))
Torsions.append(Torsion(23,'hc-c3-c3-h1',13,2,3,4,333))
Torsions.append(Torsion(24,'hc-c3-c3-c',13,2,3,6,333))
Torsions.append(Torsion(25,'hn-n3-c3-h1',14,5,3,4,333))
Torsions.append(Torsion(26,'hn-n3-c3-h1',15,5,3,4,333))
Torsions.append(Torsion(27,'hn-n3-c3-c',14,5,3,6,333))
Torsions.append(Torsion(28,'hn-n3-c3-c',15,5,3,6,333))
Torsions.append(Torsion(29,'n3-c3-c-o',5,3,6,8,333))
Torsions.append(Torsion(30,'n3-c3-c-oh',5,3,6,7,333))
Torsions.append(Torsion(31,'hn-n3-c3-c3',14,5,3,2,333))
Torsions.append(Torsion(32,'hn-n3-c3-c3',15,5,3,2,333))
Torsions.append(Torsion(33,'h1-c3-c-o',4,3,6,8,333))
Torsions.append(Torsion(34,'h1-c3-c-oh',4,3,6,7,333))
Torsions.append(Torsion(35,'o-c-c3-c3',8,6,3,2,333))
Torsions.append(Torsion(36,'oh-c-c3-c3',7,6,3,2,333))
Torsions.append(Torsion(37,'n3-c3-c-o',5,3,6,8,333))
Torsions.append(Torsion(38,'h1-c3-c-o',4,3,6,8,333))
Torsions.append(Torsion(39,'n3-c3-c-oh',5,3,6,7,333))
Torsions.append(Torsion(40,'h1-c3-c-oh',4,3,6,7,333))
Torsions.append(Torsion(41,'c3-c-oh-ho',3,6,7,16,333))
Torsions.append(Torsion(42,'o-c-oh-ho',8,6,7,16,333))
Torsions.append(Torsion(43,'c3-c-oh-ho',3,6,7,16,333))
Torsions.append(Torsion(44,'o-c-oh-ho',8,6,7,16,333))
inputdata = Sysdata(Atoms,Bonds,Angles,Torsions)
